call plug#begin()
Plug 'francoiscabrol/ranger.vim'
Plug 'tpope/vim-commentary'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'itchyny/lightline.vim'
Plug 'mgee/lightline-bufferline'
Plug 'airblade/vim-gitgutter'
Plug 'nelstrom/vim-visual-star-search'
Plug 'w0rp/ale'
Plug 'morhetz/gruvbox'
Plug 'junegunn/fzf.vim'
Plug 'schickling/vim-bufonly'
Plug 'christoomey/vim-tmux-navigator'
Plug 'neoclide/coc.nvim', {'tag': '*', 'do': './install.sh'}
Plug 'neoclide/coc-json', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-rls', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-tsserver', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-yaml', {'do': 'yarn install --frozen-lockfile'}
Plug 'chr4/nginx.vim'
if has('nvim')
  Plug 'rbgrouleff/bclose.vim'
endif
call plug#end()

" Themes
colorscheme gruvbox
set background=dark

" Plugin ranger
let g:ranger_map_keys = 0

" Plugin ale
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_save = 1
let g:ale_fix_on_save = 1
let g:ale_sign_error = 'x'
let g:ale_sign_warning = '!'
let g:ale_fixers = {
    \'*': ['trim_whitespace'],
    \'go': ['goimports']
\}

" Lightline config
set laststatus=2
set showtabline=2
function! CocCurrentFunction()
    return get(b:, 'coc_current_function', '')
endfunction

let g:lightline#bufferline#filename_modifier = ':t'
let g:lightline#bufferline#show_number = 2
let g:lightline = { 'colorscheme': 'gruvbox' }
let g:lightline.tabline = {'left': [['buffers']]}
let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}
let g:lightline.component_type = {'buffers': 'tabsel'}

" FZF
set rtp+=~/.fzf
let $FZF_DEFAULT_OPTS = '--bind alt-a:select-all,alt-d:deselect-all'
let $FZF_DEFAULT_COMMAND = 'rg --files --hidden --follow -g "!.git"'
